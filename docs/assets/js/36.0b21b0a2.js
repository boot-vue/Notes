(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{388:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rocketmq-🚀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-🚀"}},[t._v("#")]),t._v(" RocketMQ 🚀")]),t._v(" "),a("p",[t._v("支持 push pull 消费,本质都是消费者拉取消息")]),t._v(" "),a("p",[t._v("broker 初始会创建多个队列, producer 发送的消息只在每个队列内部有序")]),t._v(" "),a("p",[t._v("广播模式: consumer 需要指定消费模式为广播模式")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nameServer地址，这里nameserver是单台，如果nameserver是多台集群的话，就用分号分割（即namesrvAddr=ip1:port1;ip2:port2;ip3:port3）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("namesrvAddr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("xxxx:9876;xxxxx:9876")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属集群名字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("brokerClusterName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("rocketmq-cluster")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# broker名字，注意此处不同的配置文件填写的不一样  例如：在a.properties 文件中写 broker-a  在b.properties 文件中写 broker-b")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("brokerName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("broker-a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0 表示 Master，>0 表示 Slave")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("brokerId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除文件时间点，默认凌晨 4点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("deleteWhen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("04")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件保留时间，默认 48 小时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fileReservedTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("48")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Broker 的角色: ASYNC_MASTER 异步复制Master ; SYNC_MASTER 同步双写Master; SLAVE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("brokerRole")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("ASYNC_MASTER")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刷盘方式 ASYNC_FLUSH 异步刷盘; SYNC_FLUSH 同步刷盘")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("flushDiskType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("ASYNC_FLUSH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Broker 对外服务的监听端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("listenPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("10911")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("storePathRootDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("/app/custom/data/rocketmq/store-a")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在发送消息时，自动创建服务器不存在的topic，默认创建的队列数。由于是4个broker节点，所以设置为4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# defaultTopicQueueNums=4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否允许 Broker 自动创建Topic，建议线下开启，线上关闭")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("autoCreateTopicEnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("autoCreateSubscriptionGroup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commitLog每个文件的大小默认1G")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mapedFileSizeCommitLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("1073741824")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ConsumeQueue每个文件默认存30W条，根据业务情况调整")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mapedFileSizeConsumeQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("300000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# destroyMapedFileIntervalForcibly=120000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redeleteHangedFileInterval=120000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检测物理文件磁盘空间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("diskMaxUsedSpaceRatio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("88")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commitLog 存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#storePathCommitLog=/data/rocketmq/store/commitlog")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消费队列存储路径存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#storePathConsumeQueue=/data/rocketmq/store/consumequeue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息索引存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#storePathIndex=/data/rocketmq/store/index")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkpoint 文件存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#storeCheckpoint=/data/rocketmq/store/checkpoint")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# abort 文件存储路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#abortFile=/data/rocketmq/store/abort")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制的消息大小")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxMessageSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("65536")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#flushCommitLogLeastPages=4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#flushConsumeQueueLeastPages=2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#flushCommitLogThoroughInterval=10000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#flushConsumeQueueThoroughInterval=60000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发消息线程池数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendMessageThreadPoolNums=128")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉消息线程池数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pullMessageThreadPoolNums=128")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);