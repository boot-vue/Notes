(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{368:function(e,a,v){e.exports=v.p+"assets/img/jvm.f19cbe79.png"},394:function(e,a,v){"use strict";v.r(a);var t=v(12),_=Object(t.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"jvm-🌟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-🌟"}},[e._v("#")]),e._v(" JVM 🌟")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://render.alipay.com/p/s/jvm-generate/",target:"_blank",rel:"noopener noreferrer"}},[e._v("工具"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("hotspot")]),e._v(" : "),t("code",[e._v("解释器")]),e._v("与"),t("code",[e._v("jit即时编译器")]),e._v("协同工作\n"),t("code",[e._v("jrocket")]),e._v(": oracle 专注于服务端应用, 只包含即时编译器,启动慢 运行时速度快\n"),t("code",[e._v("j9")]),e._v(": ibm\n"),t("code",[e._v("harmony")]),e._v(": apache/ibm/intel")]),e._v(" "),t("p",[e._v("等等....")]),e._v(" "),t("h2",{attrs:{id:"反编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反编译"}},[e._v("#")]),e._v(" 反编译")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("javap -v xxx.class\n")])])]),t("h2",{attrs:{id:"指令集架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令集架构"}},[e._v("#")]),e._v(" 指令集架构")]),e._v(" "),t("blockquote",[t("p",[e._v("jvm 基于栈的指令集架构, 指令集小 步骤多 跨平台 和 cpu 指令集耦合低")])]),e._v(" "),t("h2",{attrs:{id:"生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),t("ul",[t("li",[e._v("启动 bootstrap class loader 创建 init class 来完成")]),e._v(" "),t("li",[e._v("执行 java 程序")]),e._v(" "),t("li",[e._v("退出 正常/异常退出")])]),e._v(" "),t("h2",{attrs:{id:"runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#runtime"}},[e._v("#")]),e._v(" Runtime")]),e._v(" "),t("blockquote",[t("p",[e._v("管理运行时数据区"),t("code",[e._v("runtime data area")])])]),e._v(" "),t("h2",{attrs:{id:"架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[e._v("#")]),e._v(" 架构图")]),e._v(" "),t("p",[t("img",{attrs:{src:v(368),alt:""}})]),e._v(" "),t("h2",{attrs:{id:"classlocader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classlocader"}},[e._v("#")]),e._v(" classlocader")]),e._v(" "),t("ol",[t("li",[e._v("加载 class 并实例化")]),e._v(" "),t("li",[e._v("link prepare 阶段 类变量初始化")])]),e._v(" "),t("h2",{attrs:{id:"jvm-参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-参数"}},[e._v("#")]),e._v(" jvm 参数")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Xms 堆起始内存")])]),e._v(" "),t("li",[t("p",[e._v("Xmx 堆最大内存")])]),e._v(" "),t("li",[t("p",[e._v("Xmn 新生代大小")])]),e._v(" "),t("li",[t("p",[e._v("XX:+PrintGCDetails")])]),e._v(" "),t("li",[t("p",[e._v("XX:metspaceSize")])]),e._v(" "),t("li",[t("p",[e._v("client/server 64 位默认 server 模式")])]),e._v(" "),t("li",[t("p",[e._v("XX:+HeapDumpOnOutOfMemoryError oom 生成 dump 文件")]),e._v(" "),t("p",[e._v("占用大小->gc 后大小->分配的大小")]),e._v(" "),t("p",[t("code",[e._v("yongGC")]),e._v(" "),t("code",[e._v("old")]),e._v(" "),t("code",[e._v("GC fullGc")])])])]),e._v(" "),t("h2",{attrs:{id:"gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc"}},[e._v("#")]),e._v(" GC")]),e._v(" "),t("p",[t("code",[e._v("G1")])]),e._v(" "),t("ul",[t("li",[e._v("并发/并行 标记")]),e._v(" "),t("li",[e._v("分代收集")]),e._v(" "),t("li",[e._v("空间整合")]),e._v(" "),t("li",[e._v("可预测的停顿时间模型")])]),e._v(" "),t("h2",{attrs:{id:"oom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oom"}},[e._v("#")]),e._v(" oom")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("年轻代")]),e._v(" "),t("p",[e._v("存活时间短 eden space 满了 gc 转入老年代")])]),e._v(" "),t("li",[t("p",[e._v("老年代")]),e._v(" "),t("p",[e._v("存活时间长 XX:NewRatio=4 新时代 1 老年代 4")])]),e._v(" "),t("li",[t("p",[e._v("minor gc 新生代 gc")])]),e._v(" "),t("li",[t("p",[e._v("major gc 老年代 gc 用户线程暂停 尽量避免")])]),e._v(" "),t("li",[t("p",[e._v("full gc 用户线程暂停 system.gc() 老年代空间不足 方法区空间不足 尽量避免")])]),e._v(" "),t("li",[t("p",[e._v("方法区超限")])])]),e._v(" "),t("h2",{attrs:{id:"调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试"}},[e._v("#")]),e._v(" 调试")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("jvisualVM")])]),e._v(" "),t("li",[t("p",[e._v("flight recorder")])]),e._v(" "),t("li",[t("p",[e._v("jprofiler")])]),e._v(" "),t("li",[t("p",[e._v("gcviewer/gceasy")])])]),e._v(" "),t("p",[e._v("内存泄露检查--\x3e堆/方法区内存参数")]),e._v(" "),t("h1",{attrs:{id:"并发编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发编程"}},[e._v("#")]),e._v(" 并发编程")]),e._v(" "),t("h2",{attrs:{id:"countdownlatch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch"}},[e._v("#")]),e._v(" CountDownLatch")]),e._v(" "),t("p",[e._v("减法 线程外等待")]),e._v(" "),t("h2",{attrs:{id:"cyclicbarrier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cyclicbarrier"}},[e._v("#")]),e._v(" CyclicBarrier")]),e._v(" "),t("p",[e._v("加法 线程内部等待")]),e._v(" "),t("h2",{attrs:{id:"semaphore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#semaphore"}},[e._v("#")]),e._v(" Semaphore")]),e._v(" "),t("p",[e._v("信号量 控制线程最大并发数量 acquire()/release()")]),e._v(" "),t("h2",{attrs:{id:"reentrantlock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[e._v("#")]),e._v(" ReentrantLock")]),e._v(" "),t("p",[e._v("lock/unLock")]),e._v(" "),t("h2",{attrs:{id:"condition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#condition"}},[e._v("#")]),e._v(" Condition")]),e._v(" "),t("p",[e._v("条件队列 await/signal 一个线程阻塞等待另一个线程的信号")]),e._v(" "),t("h2",{attrs:{id:"readwritelock-reetrantreadwritelock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#readwritelock-reetrantreadwritelock"}},[e._v("#")]),e._v(" ReadWriteLock/ReetrantReadWriteLock")]),e._v(" "),t("p",[e._v("读写锁 readLock/writeLock")]),e._v(" "),t("h2",{attrs:{id:"volatile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[e._v("#")]),e._v(" volatile")]),e._v(" "),t("p",[e._v("共享变量（类的成员变量、类的静态成员变量）")]),e._v(" "),t("ul",[t("li",[e._v("保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的")]),e._v(" "),t("li",[e._v("禁止进行指令重排序")])]),e._v(" "),t("p",[e._v("应用场景: "),t("code",[e._v("状态标志")]),e._v(" "),t("code",[e._v("单例模式")]),e._v(" "),t("code",[e._v("独立观察")])]),e._v(" "),t("h2",{attrs:{id:"blockingqueue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blockingqueue"}},[e._v("#")]),e._v(" BlockingQueue")]),e._v(" "),t("p",[e._v("阻塞队列 put/take")]),e._v(" "),t("ul",[t("li",[e._v("arrayBlockingqueue 数组结构")]),e._v(" "),t("li",[e._v("linkedBlockingqueue 链表结构")]),e._v(" "),t("li",[e._v("linkedBlockingdeque 双向链表阻塞队列")])]),e._v(" "),t("p",[t("code",[e._v("插入")]),e._v(": add(抛异常) offer(特殊值) put(阻塞) offer(超时)\n"),t("code",[e._v("移除")]),e._v(": remove poll take poll(time)\n"),t("code",[e._v("检查")]),e._v(": element peek 无 无")]),e._v(" "),t("blockquote",[t("p",[e._v("特殊值: 增删返回 true/false 检查返回元素/null")])]),e._v(" "),t("h2",{attrs:{id:"threadpool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadpool"}},[e._v("#")]),e._v(" ThreadPool")]),e._v(" "),t("p",[t("code",[e._v("ExecutorService")]),e._v(" "),t("code",[e._v("Executors")])]),e._v(" "),t("ul",[t("li",[e._v("newFixedThreadPool")]),e._v(" "),t("li",[e._v("newCachedThreadPool")]),e._v(" "),t("li",[e._v("newSingleThreadExecutor")]),e._v(" "),t("li",[e._v("newScheduledThreadPool")])]),e._v(" "),t("p",[t("code",[e._v("ThreadPoolExecutor")]),e._v(":")]),e._v(" "),t("blockquote",[t("p",[e._v("最大容纳数 maxpoolSize+queueSize")])]),e._v(" "),t("ul",[t("li",[e._v("corePoolSize")]),e._v(" "),t("li",[e._v("maxPoolSize cpu 密集型:cpu 核心数 io 密集型:最大任务数-队列容量）/每个线程每秒处理能力 = 最大线程数")]),e._v(" "),t("li",[e._v("keepAliveTime")]),e._v(" "),t("li",[e._v("blockingQueue")]),e._v(" "),t("li",[e._v("threadFactory")]),e._v(" "),t("li",[e._v("rejectHandler "),t("code",[e._v("Abort")]),e._v("抛异常 "),t("code",[e._v("CallerRuns")]),e._v("回退给调用方线程处理 "),t("code",[e._v("Discard")]),e._v("丢弃 "),t("code",[e._v("DiscardOldest")])])]),e._v(" "),t("h2",{attrs:{id:"forkjoin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#forkjoin"}},[e._v("#")]),e._v(" ForkJoin")]),e._v(" "),t("p",[t("code",[e._v("ForkJoinPool")]),e._v(" "),t("code",[e._v("ForkJoinTask")]),e._v(" "),t("code",[e._v("RecursiveTask")])]),e._v(" "),t("p",[t("code",[e._v("computer")]),e._v("方法内 fork() 递归执行 computer 方法任务, 汇总结果 result=xx.join()")]),e._v(" "),t("h2",{attrs:{id:"completeablefuture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#completeablefuture"}},[e._v("#")]),e._v(" CompleteableFuture")]),e._v(" "),t("p",[t("code",[e._v("异步回调")])]),e._v(" "),t("p",[t("code",[e._v("runAsync")]),e._v(":没有返回值 "),t("code",[e._v("supplyAsync")]),e._v(":需要返回值")]),e._v(" "),t("p",[t("code",[e._v("whenComplete(consumer)")]),e._v(" "),t("code",[e._v("exceptionaly(function)")]),e._v(" "),t("code",[e._v("get")])]),e._v(" "),t("h1",{attrs:{id:"函数式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[e._v("#")]),e._v(" 函数式编程")]),e._v(" "),t("h2",{attrs:{id:"function-t-r"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function-t-r"}},[e._v("#")]),e._v(" Function<T,R>")]),e._v(" "),t("p",[e._v("T:输入 R:返回")]),e._v(" "),t("p",[t("code",[e._v("R apply(T)")])]),e._v(" "),t("h2",{attrs:{id:"predicate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#predicate"}},[e._v("#")]),e._v(" Predicate"),t("T")],1),e._v(" "),t("p",[e._v("T:输入 返回:Boolean")]),e._v(" "),t("p",[t("code",[e._v("Boolean test(T)")])]),e._v(" "),t("h2",{attrs:{id:"consumer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[e._v("#")]),e._v(" Consumer"),t("T")],1),e._v(" "),t("p",[e._v("T:输入 返回:void")]),e._v(" "),t("p",[t("code",[e._v("void accept(T)")])]),e._v(" "),t("h2",{attrs:{id:"supplier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#supplier"}},[e._v("#")]),e._v(" Supplier"),t("T")],1),e._v(" "),t("p",[e._v("输入:void 返回:T")]),e._v(" "),t("p",[t("code",[e._v("T get()")])])])}),[],!1,null,null,null);a.default=_.exports}}]);