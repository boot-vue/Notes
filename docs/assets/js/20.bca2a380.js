(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{373:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[t._v("#")]),t._v(" Shell")]),t._v(" "),a("h2",{attrs:{id:"n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[t._v("#")]),t._v(" $n")]),t._v(" "),a("p",[a("code",[t._v("$0")]),t._v(" 代表当前 shell 文件名 "),a("code",[t._v("$1--$n")]),t._v(" 代表传递的参数 "),a("code",[t._v("${12}")]),t._v(" 要加括号\n"),a("code",[t._v("$#")]),t._v(" 获取输入参数的个数\n"),a("code",[t._v("$*")]),t._v(" 代表所有的参数, 把所有参数当做一个整体, 将双引号取值时不能被用于分割循环\n"),a("code",[t._v("$@")]),t._v(" 也是所有的参数, 把每个参数都当做一个独立的个体\n"),a("code",[t._v("$?")]),t._v(" shell 上一次执行的状态, 0:正确执行 其它:有错误")]),t._v(" "),a("h2",{attrs:{id:"find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" find")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" /tmp/ -type f -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lllll*"')]),t._v(" -mmin +1200 -delete\n")])])]),a("ol",[a("li",[t._v("-type：根据不同的文件类型筛选")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("f\t普通文件\nd\t目录文件\nl\t符号链接文件\nb\t块设备 文件\nc\t字符设备文件\np\t管道文件\ns\t套接字文件\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("以天为单位 : atime(文件的最后访问时间)、mtime(文件的最后修改时间)、ctime(文件最后改变时间)")]),t._v(" "),a("li",[t._v("以分钟为单位 : amin(文件的最后访问时间)、mmin(文件的最后修改时间)、cmin(文件最后改变时间)")]),t._v(" "),a("li",[t._v("-print：输出至标准输出；默认的动作；")]),t._v(" "),a("li",[t._v("-ls：类似于对查找到的文件执行“ls -l”命令，输出文件的详细信息；")]),t._v(" "),a("li",[t._v("-delete：删除查找到的文件；")]),t._v(" "),a("li",[t._v("-fls /PATH/TO/SOMEFILE：把查找到的所有文件的长格式信息保存至指定文件中；")]),t._v(" "),a("li",[t._v("-ok COMMAND {} ; ：对查找到的每个文件执行由 COMMAND 表示的命令；每次操作都由用户进行确认；")]),t._v(" "),a("li",[t._v("-exec COMMAND {} ; ：对查找到的每个文件执行由 COMMAND 表示的命令；")]),t._v(" "),a("li",[t._v("find 查找到的文件太多 find ................ | xargs COMMAND")])]),t._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("p",[a("code",[t._v("expr + - \\* / %")]),t._v(" expr 运算符之间要有空格, 没有小括号, 多次运算需要分开用 ` 包裹 :"),a("code",[t._v("expr")]),t._v("expr 2 + 3"),a("code",[t._v("\\* 4")])]),t._v(" "),a("p",[t._v("或者")]),t._v(" "),a("p",[a("code",[t._v("$[......]")]),t._v(" :不需要空格 也可以用小括号")]),t._v(" "),a("h2",{attrs:{id:"流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("条件表达式")]),t._v(" "),a("p",[a("code",[t._v("[ 条件 ]")]),t._v(" 中括号要有空格, "),a("code",[t._v("-lt")]),t._v(" "),a("code",[t._v("-le")]),t._v(" "),a("code",[t._v("-eq")]),t._v(" "),a("code",[t._v("-gt")]),t._v(" "),a("code",[t._v("-ge")]),t._v(" "),a("code",[t._v("-ne")]),t._v(", 文件权限: "),a("code",[t._v("-r")]),t._v(" "),a("code",[t._v("-w")]),t._v(" "),a("code",[t._v("-x")]),t._v(", 文件类型: "),a("code",[t._v("-f")]),t._v(" "),a("code",[t._v("-d")]),t._v(" "),a("code",[t._v("-e")]),t._v(":是否存在")])]),t._v(" "),a("li",[a("p",[t._v("if")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("或")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("case")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$xxx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("for")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("初始值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("控制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 另一种")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("xx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 值1 值2 值3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("while")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"read"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#read"}},[t._v("#")]),t._v(" read")]),t._v(" "),a("p",[a("code",[t._v("read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...输入内容赋给的变量]")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-a 后跟一个变量，该变量会被认为是个数组，然后给其赋值，默认是以空格为分割符。\n-d 后面跟一个标志符，其实只有其后的第一个字符有用，作为结束的标志。\n-p 后面跟提示信息，即在输入前打印提示信息。\n-e 在输入的时候可以使用命令补全功能。\n-n 后跟一个数字，定义输入文本的长度，很实用。\n-r 屏蔽\\，如果没有该选项，则\\作为一个转义字符，有的话 \\就是个正常的字符了。\n-s 安静模式，在输入字符时不再屏幕上显示，例如login时输入密码。\n-t 后面跟秒数，定义输入字符的等待时间。\n-u 后面跟fd，从文件描述符中读入，该文件描述符可以是exec新开启的。\n")])])]),a("h2",{attrs:{id:"basename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basename"}},[t._v("#")]),t._v(" basename")]),t._v(" "),a("p",[t._v("截取最后一个"),a("code",[t._v("/")]),t._v("之后的文本,")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" NAME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SUFFIX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" /usr/bin/sort          -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sort"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" include/stdio.h .h     -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdio"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" -s .h include/stdio.h  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdio"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),t._v(" -a any/str1 any/str2   -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str1"')]),t._v(" followed by "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str2"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"dirname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dirname"}},[t._v("#")]),t._v(" dirname")]),t._v(" "),a("p",[t._v("输出最后一个"),a("code",[t._v("/xxx")]),t._v("之前的部分")]),t._v(" "),a("h2",{attrs:{id:"自定义函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数"}},[t._v("#")]),t._v(" 自定义函数")]),t._v(" "),a("p",[t._v("函数必须定义在调用之前")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("xxx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("s")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$s")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"cut"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cut"}},[t._v("#")]),t._v(" cut")]),t._v(" "),a("p",[t._v("按行切")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cut")]),t._v(" OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("FILE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。\n-c ：以字符为单位进行分割。\n-d ：自定义分隔符，默认为制表符。\n-f ：与-d一起使用，指定显示切割后的哪一列\n-n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的\n范围之内，该字符将被写出；否则，该字符将被排除\n")])])]),a("h2",{attrs:{id:"sed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[t._v("#")]),t._v(" sed")]),t._v(" "),a("p",[t._v("按行处理")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("script-only-if-no-other-script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("input-file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-e<script>或--expression=<script> 以选项中指定的script来处理输入的文本文件。\n-f<script文件>或--file=<script文件> 以选项中指定的script文件来处理输入的文本文件。\n-h或--help 显示帮助。\n-n或--quiet或--silent 仅显示script处理后的结果。\n-V或--version 显示版本信息。\n动作说明：\n\na ：新增， a 的后面可以接字串，而这些字串会在新的一行出现\nc ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行\nd ：删除， d 后面通常不接任何东西 sed '/wo/d' xx.txt\ni ：插入， i 的后面可以接字串，而这些字串会在新的一行出现\np ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行\ns ：替换  1,20s/old/new/g\n\n\n# 对全局匹配上的所有字符串进行替换\nsed -i 's/原字符串/新字符串/g' xxxxx.txt\n")])])]),a("h2",{attrs:{id:"awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[t._v("#")]),t._v(" awk")]),t._v(" "),a("p",[t._v("按行处理, 默认按空格切分")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POSIX or GNU style options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -f progfile "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POSIX or GNU style options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'program'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-F fs or --field-separator fs\n指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:\n-v var=value or --asign var=value\n赋值一个用户定义变量。\n-f scripfile or --file scriptfile\n从脚本文件中读取awk命令。\n-mf nnn and -mr nnn\n对nnn值设置内在限制，-mf选项限制分配给nnn的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。\n-W compact or --compat, -W traditional or --traditional\n在兼容模式下运行awk。所以gawk的行为和标准的awk完全一样，所有的awk扩展都被忽略。\n-W copyleft or --copyleft, -W copyright or --copyright\n打印简短的版权信息。\n-W help or --help, -W usage or --usage\n打印全部awk选项和每个选项的简短说明。\n-W lint or --lint\n打印不能向传统unix平台移植的结构的警告。\n-W lint-old or --lint-old\n打印关于不能向传统unix平台移植的结构的警告。\n-W posix\n打开兼容模式。但有以下限制，不识别：/x、函数关键字、func、换码序列以及当fs是一个空格时，将新行作为一个域分隔符；操作符**和**=不能代替^和^=；fflush无效。\n-W re-interval or --re-inerval\n允许间隔正则表达式的使用，参考(grep中的Posix字符类)，如括号表达式[[:alpha:]]。\n-W source program-text or --source program-text\n使用program-text作为源代码，可与-f命令混用。\n-W version or --version\n打印bug报告信息的版本。\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^root/{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$7")]),t._v("}'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v("\n")])])]),a("p",[t._v("内置变量: "),a("code",[t._v("FILENAME")]),t._v(" "),a("code",[t._v("NR")]),t._v(":已读行数 "),a("code",[t._v("NF")]),t._v(": 切割后多少列")]),t._v(" "),a("h2",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" sort")]),t._v(" "),a("p",[t._v("按行处理文件, 切割文件, 指定排序")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-b 忽略每行前面开始出的空格字符。\n-c 检查文件是否已经按照顺序排序。\n-d 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。\n-f 排序时，将小写字母视为大写字母。\n-i 排序时，除了040至176之间的ASCII字符外，忽略其他的字符。\n-m 将几个排序好的文件进行合并。\n-M 将前面3个字母依照月份的缩写进行排序。\n-n 依照数值的大小排序。\n-o<输出文件> 将排序后的结果存入指定的文件。\n-r 以相反的顺序来排序。\n-k 指定排序的key(哪列)\n-t<分隔字符> 指定排序时所用的栏位分隔字符。\n+<起始栏位>-<结束栏位> 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。\n--help 显示帮助。\n--version 显示版本信息。\n")])])]),a("h2",{attrs:{id:"expect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expect"}},[t._v("#")]),t._v(" expect")]),t._v(" "),a("p",[t._v("shell 自动交互输入")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Command")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("spawn")]),t._v(" "),a("td",[t._v("启动新的进程")])]),t._v(" "),a("tr",[a("td",[t._v("send")]),t._v(" "),a("td",[t._v("用于向进程发送字符串")])]),t._v(" "),a("tr",[a("td",[t._v("expect")]),t._v(" "),a("td",[t._v("从进程接收字符串")])]),t._v(" "),a("tr",[a("td",[t._v("interact")]),t._v(" "),a("td",[t._v("允许用户交互")])]),t._v(" "),a("tr",[a("td",[t._v("exp_continue")]),t._v(" "),a("td",[t._v("匹配多个字符串在执行动作后加此命令")])])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\nopenssl genrsa -out ios.key "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n/usr/bin/expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOF\nspawn openssl req -new -sha256 -key ios.key -out ios.csr\nexpect {\n    "Country Name" {send "CN'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "State or Province Name" {send "GUANGDONG'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "Locality Name" {send "GUANGZHOU'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "Organization Name" {send "IOSSIGN'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "Organizational Unit Name" {send "IOSSIGN'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "Common Name" {send "IOSSIGN'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "Email Address" {send "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "A challenge password" {send "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"; exp_continue;}\n    "An optional company name" {send "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('";}\n}\nexpect eof\nEOF')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);