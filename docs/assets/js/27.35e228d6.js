(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{393:function(e,t,o){"use strict";o.r(t);var c=o(12),l=Object(c.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"kubectl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#kubectl"}},[e._v("#")]),e._v(" kubectl")]),e._v(" "),o("p",[o("code",[e._v("kubectl create/apply -f xxx.yaml --record")]),e._v(" create 与 apply : apply 更新 create 新建,已存在报错 record 记录每次变化")]),e._v(" "),o("p",[o("code",[e._v("kubectl get pods -o wide -n xkube-system")]),e._v(" : namespace")]),e._v(" "),o("p",[o("code",[e._v("kubectl logs podName -c containerName -n kube-system")]),e._v(": 查看某个 pod 日志")]),e._v(" "),o("p",[o("code",[e._v("kubectl describe pod xxxx -n kube-system")]),e._v(":查看 pod 详细信息")]),e._v(" "),o("p",[o("code",[e._v("kubectl get/delete namespace/namespaces/ns/services/svc/deploy/secrets/pods -n xxxx -o yaml/wide")]),e._v(" : services:svc deployment: deploy ns:namespace")]),e._v(" "),o("p",[o("code",[e._v("kubectl scale deployment/deployName --replicas=3")]),e._v(" : 伸缩")]),e._v(" "),o("p",[o("code",[e._v("kubectl set image deployment/deployName xxx/vvv:latest")]),e._v(":更新 deploy 镜像")]),e._v(" "),o("p",[o("code",[e._v("kubectl rollout undo deployment/deployName --to-revesion=2")]),e._v(":回滚到某次的状态 默认上一次")]),e._v(" "),o("p",[o("code",[e._v("kubectl rollout status deployment/deployName")]),e._v(":查看回滚状态")]),e._v(" "),o("p",[o("code",[e._v("kubectl rollout history deployment/deployName")]),e._v(":查看部署历史")]),e._v(" "),o("p",[o("code",[e._v("kubectl explain spec.xx")]),e._v(" : 查看 yaml 配置模板")]),e._v(" "),o("p",[o("code",[e._v("kubectl exit pod/svc xxx")]),e._v(": 编辑资源 yaml, 修改某些字段可能无效")]),e._v(" "),o("p",[o("code",[e._v("kubectl exec podName -c containerName -it -- /bin/bash")]),e._v(" :进入 pod 容器内")]),e._v(" "),o("p",[o("code",[e._v("kubectl label pod xxx k=v --override=true")]),e._v(": 修改某个资源的 label")]),e._v(" "),o("p",[o("code",[e._v("kubectl expose deployment xxxx --port=80 --target-port=80")])]),e._v(" "),o("ul",[o("li",[e._v("svc 绑定端口 port/对外暴露端口 target-port/容器内端口 默认一致 node-port/外部可以访问的端口")]),e._v(" "),o("li",[e._v("默认 type: ClusterIP 集群内访问 NodePort:外部可以访问")])]),e._v(" "),o("p",[o("code",[e._v("kubectl create configmap xxx --from-file=/xxxx")]),e._v(" :configmap")]),e._v(" "),o("p",[o("code",[e._v("kubectl get cm/confgmap")])]),e._v(" "),o("p",[o("code",[e._v("kubectl taint ndoes xxx k=v:effect")]),e._v(": 设置污点")])])}),[],!1,null,null,null);t.default=l.exports}}]);